@model LMS.Models.LeaveForOther

@{
    ViewBag.Title = "LeaveForOther";
}

<main id="main" class="main">
    <div ID="NavbarContent" runat="server">
        <!-- #Include virtual="includes/Navbar.aspx" -->
    </div>
    <div id="wrapper">
        <!-- Sidebar -->
        <!-- #Include virtual="includes/Sidebar.aspx" -->
        <div id="content-wrapper">
            <div class="container-fluid">
                <!-- Breadcrumbs-->
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href='@Url.Action("DashBoard", "LMS")'>Dashboard</a>
                    </li>
                    <li class="breadcrumb-item">Leaves</li>
                    <li class="breadcrumb-item active">Leave Application for another</li>
                </ol>
                <!-- Leave-->
                <div class="card mb-3">
                    <div class="card-header">
                        <i class="fas fa-suitcase"></i>
                        Leave Application
                    </div>
                    <form novalidate="" action="#" method="POST" id="LeaveApplicationForm" autocomplete="off">
                        <div class="card-body">
                            <div class="row mb-5">
                                <div class="col-md-4 mb-4">
                                    <div>Personal Information</div>
                                    <div class="text-muted small">Shows information for specific leaves</div>
                                </div>
                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="Employee" class="form-control-label">Employee applying for</label>
                                                <select Class="form-control" ID="Employee" name="employee" AutoPostBack="false" style="width:100%">
                                                    <option selected value="0">---Select---</option>
                                                    @foreach (var item in ViewBag.employees)
                                                    {
                                                        <option value="@item" customAttribute="item.SomethingSpecial">
                                                            @item
                                                        </option>
                                                    }
                                                </select>
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The employee must be selected</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="Leave_Type" class="form-control-label">Leave Type</label>
                                                <select Class="form-control" ID="Leave_Type" name="Leave_Type" AutoPostBack="false" style="width:100%">
                                                    <option value="Select">Select</option>
                                                </select>
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The leave type must be selected</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Leave Opening Balance</label>
                                                @Html.TextBoxFor(model => model.Leave_Opening_Balance, new { @class = "form-control", @readonly = "readonly", id = "Leave_Opening_Balance" })
                                                @Html.ValidationMessageFor(model => model.Leave_Opening_Balance, "", new { @class = "" })
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Leave Entitled</label>
                                                @Html.TextBoxFor(model => model.Leave_Entitled, new { @class = "form-control", @readonly = "readonly", id = "Leave_Entitled" })
                                                @Html.ValidationMessageFor(model => model.Leave_Entitled, "", new { @class = "" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Leave Accrued Days </label>
                                                @Html.TextBoxFor(model => model.Leave_Accrued_Days, new { @class = "form-control", @readonly = "readonly", id = "Leave_Accrued_Days" })
                                                @Html.ValidationMessageFor(model => model.Leave_Accrued_Days, "", new { @class = "" })
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Leave Days Taken</label>
                                                @Html.TextBoxFor(model => model.Leave_Days_Taken, new { @class = "form-control", @readonly = "readonly", id = "Leave_Days_Taken" })
                                                @Html.ValidationMessageFor(model => model.Leave_Days_Taken, "", new { @class = "" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Leave Balance</label>
                                                @Html.TextBoxFor(model => model.Leave_Balance, new { @class = "form-control", @readonly = "readonly", id = "Leave_Balance" })
                                                @Html.ValidationMessageFor(model => model.Leave_Balance, "", new { @class = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--Work information-->
                            <hr>
                            <div class="row mb-5">
                                <div class="col-md-4 mb-4">
                                    <div>Leave Selection</div>
                                    <div class="text-muted small">Select the leave start and end dates here.</div>
                                </div>
                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label" for="LeaveStartDay">Leave Start Date</label>
                                                @Html.TextBoxFor(model => model.LeaveStartDay, new { @class = "form-control", id = "LeaveStartDay" })
                                                @Html.ValidationMessageFor(model => model.LeaveStartDay, "", new { @class = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The leave start date must be selected</div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label" for="LeaveEndDay">Leave End Date</label>
                                                @Html.TextBoxFor(model => model.LeaveEndDay, new { @class = "form-control", id = "LeaveEndDay" })
                                                @Html.ValidationMessageFor(model => model.LeaveEndDay, "", new { @class = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The leave end date must be selected</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label" for="LeaveDaysApplied">Leave Days Applied</label>
                                                @Html.TextBoxFor(model => model.LeaveDaysApplied, new { @class = "form-control", id = "LeaveDaysApplied" })
                                                @Html.ValidationMessageFor(model => model.LeaveDaysApplied, "", new { @class = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The leave days applied must be specified</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Return Date</label>
                                                @Html.TextBoxFor(model => model.ReturnDate, new { @class = "form-control", @readonly = "readonly", id = "ReturnDate" })
                                                @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The leave return date must be specified</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" id="UploadDiv">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="txt_name" class="form-control-label">Attachment File</label>
                                                <input type="file" id="postedFile" name="postedFile" class="form-control-file" required accept=".pdf" />
                                                @Html.TextBoxFor(model => model.LeaveDaysApplied, new { @class = "form-control", id = "LeaveDaysApplied" })
                                                @Html.ValidationMessageFor(model => model.LeaveDaysApplied, "", new { @class = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">A file to upload must be chosen</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label class="form-control-label">Comments if any</label>
                                                @Html.TextAreaFor(model => model.Leave_comments, new { @class = "form-control MultiLineLimit", TextMode = "multiline", Columns = "50", maxlength = "50", Rows = "3", id = "Leave_comments" })
                                                @Html.ValidationMessageFor(model => model.Leave_comments, "", new { @class = "" })
                                                <p class="pull-right text-muted small" id="count_message"></p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-light text-right">
                            <button id="Save" class="btn btn-primary">Save</button>
                            <button id="Submit" class="btn btn-success">Submit</button>
                        </div>
                    </form>
                    <div class="card-footer small text-muted">Updated today at @DateTime.Now.ToShortTimeString() </div>
                </div>
            </div>
        </div>
        <!-- /.content-wrapper -->
    </div>
    <!-- /#wrapper -->
    <!-- Logout Modal-->
    
</main>
<link href="~/Assest/css/select2.min.css" rel="stylesheet" />
<!--jQUERY date picker--->
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<!-- Bootstrap core JavaScript-->
<script src="~/Assest/vendor/jquery/jquery.min.js"></script>
<script src="~/Assest/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- Core plugin JavaScript-->
<script src="~/Assest/vendor/jquery-easing/jquery.easing.min.js"></script>
<!-- Bootstrap core CSS-->
<link href="~/Assest/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
<link href="~/Assest/vendor/datatables/dataTables.bootstrap4.css" rel="stylesheet">
<!-- Custom fonts for this template-->
<link href="~/Assest/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
<!-- Page level plugin CSS-->
<link href="~/Assest/vendor/datatables/dataTables.bootstrap4.css" rel="stylesheet">
<!-- Custom scripts for all pages-->
<script src="~/Assest/js/sb-admin.min.js"></script>
<script src="~/Assest/js/bootbox.min.js"></script>
<script src="~/Assest/js/bootboxError.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<!-- JQUERY DATEPICKER-->
<link rel="manifest" href="manifest.json">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha384-tsQFqpEReu7ZLhBV2VZlAu7zcOV+rXbYlF2cqB8txI/8aZajjp4Bqd+V6D5IgvKT" crossorigin="anonymous"></script>
<script type="text/javascript">
    var jQuery_3_3_1 = $.noConflict(true);
</script>
<script src="~/Assest/js/jquery.toast.js"></script>
<script>

    $(function () {

        $(".MultiLineLimit").on('change keydown paste input', function () {
            this.value = (this.value.length <= 50 ? this.value : this.value.substring(0, 50));
        });
        var text_max = 50;
        $('#count_message').html(text_max + ' remaining');

        $('#Leave_comments').keyup(function () {
            var text_length = $('#Leave_comments').val().length;
            var text_remaining = text_max - text_length;

            $('#count_message').html(text_remaining + ' remaining');
        });
        $('#UploadDiv').hide();
        $('#Leave_Type').append('<option value=""> </option>');
        $("#LeaveStartDay").datepicker({ dateFormat: 'dd/mm/yy' }).val();
        $("#LeaveEndDay").datepicker({ dateFormat: 'dd/mm/yy' }).val();

        $("#Employee").change(function () {
            //selection fields
            $("#Leave_Type").children('option:not(:first)').remove();
            var employee = $('#Employee').val();
            
            if ($('#Employee').val() != '') {
                $.ajax({
                    url: "@Url.Action("GetUserLeaves", "LeaveForOther")",
                    type: "POST",
                    data: '{param1:"' + employee + '" }',
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {

                        if (response != null ) {
                            var data = $.parseJSON(response);

                            $.each(data, function (i, item) {
                                $('#Leave_Type').html('');
                                var options = '';
                                options += '<option value="Select">---Select---</option>';
                                for (var i = 0; i < data.length; i++) {
                                    options += '<option value="' + data[i].LeaveCode + '">' + data[i].LeaveName + '</option>';
                                }
                                $('#Leave_Type').append(options);
                            });
                        }
                    }
                });
            }
        });
        $("#Leave_Type").change(function () {
            //selection fields
            if ($('#Leave_Type').val() != '' && $('#Employee').val() != '') {

                var leavetype = $('#Leave_Type').val();
                var Employee = $('#Employee').val();
                
                jQuery.ajax({
                    url: "@Url.Action("GetLeaveDetails", "LeaveForOther")",
                    type: "POST",
                    data: '{param1:"' + leavetype + '", param2:"' + Employee + '" }',
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {

                        if (response != null ) {
                            var data = $.parseJSON(response);
                            //set fields values
                            console.log(data);
                            //alert($('#Leave_Type').val());
                            $('#Leave_Opening_Balance').val(data.Leave_Opening_Balance);
                            $('#Leave_Entitled').val(data.Leave_Entitled);
                            $('#Leave_Accrued_Days').val(data.Leave_Accrued_Days);
                            $('#Leave_Days_Taken').val(data.Leave_Days_Taken);
                            $('#Leave_Balance').val(data.Leave_Balance);

                            if (data.RequiresAttachment == 'Yes') {
                                //  alert('now');
                                $('#UploadDiv').show();
                            } else {
                                $('#UploadDiv').hide();
                            }

                            if (data.AttachmentMandatory == 'No') {
                                document.getElementById('postedFile').required = false;
                            }
                        }
                    }
                });
            }

        });
        // LeaveStartDay datepicker event handler
        $("#LeaveStartDay").change(function () {
            //when the date is changed
            if ($("#Leave_Type").val() == "0") {
                //alert user to select a leave type first
                bootbox.alert("Please select a Leave Type", function () {
                    //set leave start date value to blank
                    $("#LeaveStartDay").val('');
                });
            }
            //reset selection fields
            if ($("#LeaveEndDay").val() != '') {
                $("#LeaveEndDay").val('');
            }
            if ($("#LeaveDaysApplied").val() != '') {
                $("#LeaveDaysApplied").val('');
            }
            if ($("#ReturnDate").val() != '') {
                $("#ReturnDate").val('');
            }
        });
        $("#LeaveEndDay").change(function () {
            //when the date is changed
            if ($("#Leave_Type").val() == "0") {
                //alert user to select a leave type first
                bootbox.alert("Please select a Leave Type", function () {
                    //set leave staEndrt date value to blank
                    $("#LeaveEndDay").val('');
                });

            } else if ($("#LeaveStartDay").val() == '') {
                bootbox.alert("Please enter the Leave Start Date");
            } else if ($("#LeaveEndDay").val() == '') {
                bootbox.alert("Please enter the Leave End Date");
            } else {
                var start_date = convertDate($("#LeaveStartDay").val(), "/", "-");
                var end_date = convertDate($("#LeaveEndDay").val(), "/", "-");

                var startDate = new Date(start_date);
                var endDate = new Date(end_date);

                if (startDate <= endDate) {
                    var leavet = $('#Leave_Type').val();
                    var leavestart = $('#LeaveStartDay').val();
                    var leaveend = $('#LeaveEndDay').val();
                    jQuery.ajax({
                        url: "@Url.Action("GetLeaveState", "LeaveForOther")",
                        type: "POST",
                        data: '{param1:"' + leavet + '",param2:"' + leavestart + '", param3:"' + leaveend + '"}',
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (response) {

                            if (response != null ) {
                                var data = $.parseJSON(response);

                                if (data.Validity == false) {
                                    bootbox.alert(data.Message);
                                } else {
                                    $("#ReturnDate").val(data.ReturnDate);
                                    $("#LeaveDaysApplied").val(data.LeaveDaysApplied);
                                }
                            }
                        }
                    });

                } else {
                    bootbox.alert("The Leave Start Date must be earlier than the End Date", function () {
                        $("#ReturnDate").val('');
                        $("#LeaveDaysApplied").val('');
                        $("#LeaveEndDay").val('');
                    });
                }
            }
        });

        //days applied events
        $("#LeaveDaysApplied").blur(function () {
            if (parseInt($("#LeaveDaysApplied").val()) > parseInt($("#Leave_Balance").val())) {
                bootbox.alert('Applied days cannot zero or more than leave balance days.');
                $("#LeaveDaysApplied").val('');
            }
        });
        $("#LeaveDaysApplied").keyup(function () {
            if ($("#LeaveDaysApplied").val().length == 0) {
                return;
            }
            else
                if ($("#Leave_Type").val() == "0") {
                    bootbox.alert("Please select a Leave Type");
                }
                else
                    if ($("#LeaveStartDay").val() == '') {
                        bootbox.alert("Please enter the Leave Start Date");
                    } else {

                        var ltype = $('#Leave_Type').val();
                        var lstartday = $('#LeaveStartDay').val();
                        var lendday = $('#LeaveDaysApplied').val();
                        jQuery.ajax({
                            url:"@Url.Action("GetLeaveEndDateAndReturnDate", "LeaveForOther")",
                            type: "POST",
                            data: '{param1:"' + ltype + '",param2:"' + lstartday + '", param3:"' + lendday + '"}',
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            success: function (response) {

                                if (response != null ) {
                                    var data = $.parseJSON(response);
                                    if (data.Validity == false) {
                                        bootbox.alert(data.Message);
                                    } else {
                                        $("#ReturnDate").val(data.ReturnDate);
                                        $("#LeaveEndDay").val(data.LeaveEndDay);
                                    }
                                }
                            }
                        });
                    }
       });
        //save button
    });
    $(function () {
          jQuery_3_3_1("#Save").click(function (event) {
            event.preventDefault();
            // Fetch form to apply custom Bootstrap validation
              var form = $("#LeaveApplicationForm")
              
            if (form[0].checkValidity() === true) {
                event.preventDefault()
                event.stopPropagation()
                form.addClass('was-validated');
            } else if (form[0].checkValidity() === false) {
                // Perform ajax submit here...
                showToast('Saving application');
                 //function for checkig fileupload
                var dataform = new FormData($('#LeaveApplicationForm')[0]);
                console.log(dataform);
               
                $.ajax({

                    url:"@Url.Action("FileUploadHandler", "LeaveForOther")",
                    type: 'POST',
                    data: dataform,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (file) {
                        var rdate = $('#ReturnDate').val();
                        var ltypes = $('#Leave_Type').val();
                        var leavec = $('#Leave_comments').val();
                        var lstart = $('#LeaveStartDay').val();
                        var lend = $('#LeaveEndDay').val();
                        var lapllieddy = $('#LeaveDaysApplied').val();
                        var employeenm = $('#Employee').val();
                        var selected = $("#Employee option:selected").text();

                        console.log(selected, employeenm, lapllieddy);

                        jQuery.ajax({
                            url:"@Url.Action("Save", "LeaveForOther")",
                            type: "POST",
                            data: '{param1:"' + rdate + '", param2:"' + ltypes + '", param3:"' + leavec + '", param4:"' + lstart + '", param5:"' + lend + '", param6:"' + lapllieddy + '", param7:"' + employeenm + '", param8:"' + selected + '", param9:"' + file.name + '"}',
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            success: function (response) {

                                if (response != null ) {
                                    var data = $.parseJSON(response);

                                    hideLoading();

                                    bootbox.alert(data.Message);
                                    //reset fields
                                    $("#LeaveApplicationForm")[0].reset();

                                    //$("select").each(function () {
                                    //    $(this).select2('val', '')
                                    //});
                                }
                            }
                        });
                    },
                    xhr: function () {
                        var fileXhr = $.ajaxSettings.xhr();
                        if (fileXhr.upload) {
                            $("progress").show();
                            fileXhr.upload.addEventListener("progress", function (e) {
                                if (e.lengthComputable) {
                                    $("#fileProgress").attr({
                                        value: e.loaded,
                                        max: e.total
                                    });
                                }
                            }, false);
                        }
                        return fileXhr;
                    }
                });
            }
            event.preventDefault();
        });
        jQuery_3_3_1("#Submit").click(function (event) {

            // Fetch form to apply custom Bootstrap validation

            var form = $("#LeaveApplicationForm")
            console.log(form);
            if (form[0].checkValidity() === true) {
                event.preventDefault()
                event.stopPropagation()
                form.addClass('was-validated');
            } else if (form[0].checkValidity() === false) {
                // Perform ajax submit here...

                event.preventDefault();
                var formdata = new FormData($('#LeaveApplicationForm')[0]);

                showToast('Submitting application');

                $.ajax({
                    url:"@Url.Action("FileUploadHandler", "LeaveForOther")",
                    type: 'POST',
                    data: formdata ,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (file) {
                        console.log(data);
                        var rdate = $('#ReturnDate').val();
                        var ltypes = $('#Leave_Type').val();
                        var leavec = $('#Leave_comments').val();
                        var lstart = $('#LeaveStartDay').val();
                        var lend = $('#LeaveEndDay').val();
                        var lapllieddy = $('#LeaveDaysApplied').val();
                        var employeenm = $('#Employee').val();
                        var selected = $("#Employee option:selected").text();

                        jQuery.ajax({
                            url:"@Url.Action("Submit", "LeaveForOther")",
                            type: "POST",
                            data: '{param1:"' + rdate + '", param2:"' + ltypes + '", param3:"' + leavec + '", param4:"' + lstart + '", param5:"' + lend + '", param6:"' + lapllieddy + '", param7:"' + employeenm + '", param8:"' + selected + '", param9:"' + file.name + '"}',
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            success: function (response) {

                                if (response != null ) {
                                    var data = response.d;
                                    // alert(typeof (data)); //it comes out to be string
                                    //we need to parse it to JSON
                                    data = $.parseJSON(data);

                                    hideLoading();

                                    bootbox.alert(data.Message);
                                    //reset fields
                                    $("#LeaveApplicationForm")[0].reset();

                                    //$("select").each(function () {
                                    //    $(this).select2('val', '')
                                    //});
                                }
                            }
                        });
                    },
                    xhr: function () {
                        var fileXhr = $.ajaxSettings.xhr();
                        if (fileXhr.upload) {
                            $("progress").show();
                            fileXhr.upload.addEventListener("progress", function (e) {
                                if (e.lengthComputable) {
                                    $("#fileProgress").attr({
                                        value: e.loaded,
                                        max: e.total
                                    });
                                }
                            }, false);
                        }
                        return fileXhr;
                    }
                });
            }
            event.preventDefault();
        });
    });
    //dateConverter
    function convertDate(date, symbol, new_symbol) {

        if (date != '') {
            var raw_date = date;
            if (raw_date.indexOf(symbol) > 0) {
                day = raw_date.substr(0, 2);
                month = raw_date.substr(3, 2);
                year = raw_date.substr(6, 4);

                return (year + new_symbol + month + new_symbol + day).toString();

            } else {
                return date;
            }
        } else {
            return date;
        }
    }
    function showToast(modaltittle) {
        var title = modaltittle;
        var icon = 'loading';
        var duration = 50000 * 1;
        $.Toast.showToast({ title: title, duration: duration, icon: icon, image: '' });
    }
    function hideLoading() {
        $.Toast.hideToast();
    }
</script>

