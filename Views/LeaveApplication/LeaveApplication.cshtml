@model LMS.Models.LeaveApplication

@{
    ViewBag.Title = "LeaveApplication";
}
<main id="main" class="main">
    <div ID="NavbarContent" runat="server">
        <!-- #Include virtual="includes/Navbar.aspx" -->
    </div>
    <div id="wrapper">
        <!-- Sidebar -->
        <!-- #Include virtual="includes/Sidebar.aspx" -->
        <div id="content-wrapper">
            <div class="container-fluid">
                <!-- Breadcrumbs-->
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="#">Dashboard</a>
                    </li>
                    <li class="breadcrumb-item">Leaves</li>
                    <li class="breadcrumb-item active">Leave Application</li>
                </ol>
                <!-- Leave-->
                <div class="card mb-3">
                    <div class="card-header">
                        <i class="fas fa-suitcase"></i>
                        Leave Application
                    </div>
                    <form novalidate="" action="#" method="POST" id="LeaveApplicationForm" autocomplete="off">
                        <div class="card-body">
                            <div class="row mb-5">
                                <div class="col-md-4 mb-4">
                                    <div>Leave Information</div>
                                    <div class="text-muted small">Shows information for specific leaves</div>
                                </div>
                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="Leave_Type" class="form-control-label">Leave Type</label>
                                                <select Class="form-control" ID="Leave_Type" name="Leave_Type" AutoPostBack="false" style="width:100%">
                                                    <option selected value="0">---Select---</option>
                                                    @foreach (var item in ViewBag.Leaves)
                                                    {
                                                        <option value="@item" customAttribute="item.SomethingSpecial">
                                                            @item
                                                        </option>
                                                    }
                                                </select>
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The leave type must be selected</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Leave Opening Balance</label>
                                                @Html.TextBoxFor(model => model.Leave_Opening_Balance, new { @class = "form-control", @readonly = "readonly", id = "Leave_Opening_Balance", autofocus = "" })
                                                @Html.ValidationMessageFor(model => model.Leave_Opening_Balance, "", new { @class = "" })
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Leave Entitled</label>
                                                @Html.TextBoxFor(model => model.Leave_Entitled, new { @class = "form-control", id = "Leave_Entitled", @readonly = "readonly", autofocus = "" })
                                                @Html.ValidationMessageFor(model => model.Leave_Entitled, "", new { @class = "" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Leave Accrued Days </label>
                                                @Html.TextBoxFor(model => model.Leave_Accrued_Days, new { @class = "form-control", @readonly = "readonly", id = "Leave_Accrued_Days", autofocus = "" })
                                                @Html.ValidationMessageFor(model => model.Leave_Accrued_Days, "", new { @class = "" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Leave Days Taken</label>
                                                @Html.TextBoxFor(model => model.Leave_Days_Taken, new { @class = "form-control", @readonly = "readonly", id = "Leave_Days_Taken", autofocus = "" })
                                                @Html.ValidationMessageFor(model => model.Leave_Days_Taken, "", new { @class = "" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label class="form-control-label">Leave Balance</label>
                                                @Html.TextBoxFor(model => model.Leave_Balance, new { @class = "form-control", id = "Leave_Balance", autofocus = "" })
                                                @Html.ValidationMessageFor(model => model.Leave_Balance, "", new { @class = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--Work information-->
                            <hr>
                            <div class="row mb-5">
                                <div class="col-md-4 mb-4">
                                    <div>Leave Selection</div>
                                    <div class="text-muted small">Select the leave start and end dates here.</div>
                                </div>
                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label" for="LeaveStartDay">Leave Start Date</label>
                                                @Html.TextBoxFor(model => model.LeaveStartDay, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.LeaveStartDay, "", new { @class = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The leave start date must be selected</div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label" for="LeaveEndDay">Leave End Date</label>
                                                @Html.TextBoxFor(model => model.LeaveEndDay, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.LeaveEndDay, "", new { @class = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The leave end date must be selected</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label" for="LeaveDaysApplied">Leave Days Applied</label>
                                                @Html.TextBoxFor(model => model.LeaveDaysApplied, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.LeaveDaysApplied, "", new { @class = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The leave days applied must be specified</div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Return Date</label>
                                                @Html.TextBoxFor(model => model.ReturnDate, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">The leave return date must be specified</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" id="UploadDiv">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="txt_name" class="form-control-label">Attachment File</label><br />
                                                @Html.TextBoxFor(m => Model.postedFile, new { type = "file", multiple = "true" })
                                                @Html.ValidationMessageFor(model => model.postedFile, "", new { @class = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback">A file to upload must be chosen</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label class="form-control-label">Comments if any</label>
                                                @Html.TextAreaFor(model => model.Leave_comments, new { @class = "form-control MultiLineLimit", TextMode = "multiline", Columns = "50", maxlength = "50", Rows = "3", autofocus = "" })
                                                @Html.ValidationMessageFor(model => model.Leave_comments, "", new { @class = "" })
                                                <p class="pull-right text-muted small" id="count_message"></p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-light text-right">
                            <button id="Save" class="btn btn-primary">Save</button>
                            <button id="Submit" class="btn btn-success">Submit</button>
                        </div>
                    </form>
                    <div class="card-footer small text-muted">Updated today at  @DateTime.Now.ToShortTimeString() </div>
                </div>
            </div>

        </div>
    </div>
</main>
    <link href="~/Assest/css/select2.min.css" rel="stylesheet" />
    <!--jQUERY date picker--->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
   <!-- Bootstrap core JavaScript-->
    <script src="~/Assest/vendor/jquery/jquery.min.js"></script>
    <script src="~/Assest/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Core plugin JavaScript-->
    <script src="~/Assest/vendor/jquery-easing/jquery.easing.min.js"></script>
    <!-- Bootstrap core CSS-->
    <link href="~/Assest/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom fonts for this template-->
    <link href="~/Assest/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <!-- Page level plugin CSS-->
    <link href="~/Assest/vendor/datatables/dataTables.bootstrap4.css" rel="stylesheet">
    <!-- Custom scripts for all pages-->
    <script src="~/Assest/js/sb-admin.min.js"></script>
    <script src="~/Assest/js/bootbox.min.js"></script>
    <script src="~/Assest/js/bootboxError.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <!-- JQUERY DATEPICKER-->
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha384-tsQFqpEReu7ZLhBV2VZlAu7zcOV+rXbYlF2cqB8txI/8aZajjp4Bqd+V6D5IgvKT" crossorigin="anonymous"></script>
    <script type="text/javascript">
        var jQuery_3_3_1 = $.noConflict(true);
    </script>
    <script src="~/Assest/js/jquery.toast.js"></script>
    <script>


     $(function () {
         //calculate the words in textarea
         $(".MultiLineLimit").on('change keydown paste input', function () {
             this.value = (this.value.length <= 250 ? this.value : this.value.substring(0, 250));
         });
         var text_max = 250;
         $('#count_message').html(text_max + 'remaining');
         $('#Leave_comments').keyup(function () {
             var text_length = $('#Leave_comments').val().length;
             var text_remaining = text_max - text_length;

             $('#count_message').html(text_remaining + 'remaining');
         });
         //date picker for the leavestartday
         $("#LeaveStartDay").datepicker({
             dateFormat: 'dd/mm/yy',
             onSelect: function (date) {
                 $("#LeaveEndDay").datepicker("option", "minDate", date);
                 $("#LeaveEndDay").datepicker("option", "maxDate", '+2y');
             }
         }).val();
         $("#LeaveEndDay").datepicker({ dateFormat: 'dd/mm/yy' }).val();

        //hide upload
         $('#UploadDiv').hide();
         $("#Leave_Type").change(function () {
           var data =$('#Leave_Type').val();

             //post the selected item to controller
             jQuery.ajax({
                 url:"@Url.Action("GetLeaveDetails","LeaveApplication")",
                 type: "POST",
                 data: '{param1:"' + data + '" }',
                 dataType: "json",
                 contentType: "application/json; charset=utf-8",
                 success: function (response) {
                     // console.log(JSON.stringify(response));
                         if (response != null ) {
                             var data = $.parseJSON(response);;
                             console.log(data);
                         //set fields values
                             $('#Leave_Opening_Balance').val(data.Leave_Opening_Balance);
                             $('#Leave_Entitled').val(data.Leave_Entitled);
                             $('#Leave_Accrued_Days').val(data.Leave_Accrued_Days);

                             $('#Leave_Days_Taken').val(data.Leave_Days_Taken);
                             $('#Leave_Balance').val(data.Leave_Balance);
                             if (data.RequiresAttachment == 'Yes') {
                             $('#UploadDiv').show();
                             } else {
                             $('#UploadDiv').hide();
                             }
                             if (data.AttachmentMandatory == 'No') {
                                 document.getElementById('postedFile').required = false;
                             }
                         }
                     }
                 });
         });
         // LeaveStartDay datepicker event handler
         $("#LeaveStartDay").change(function () {
             //when the date is changed
             if ($("#Leave_Type").val() == "0") {
                 //alert user to select a leave type first
                 bootbox.alert("Please select a Leave Type", function () {
                     //set leave start date value to blank
                     $("#LeaveStartDay").val('');
                 });
             }
             //reset selection fields
             if ($("#LeaveEndDay").val() != '') {
                 $("#LeaveEndDay").val('');
             }
             if ($("#LeaveDaysApplied").val() != '') {
                 $("#LeaveDaysApplied").val('');
             }
             if ($("#ReturnDate").val() != '') {
                 $("#ReturnDate").val('');
             }
         });
         $("#LeaveEndDay").change(function () {
             //when the date is changed
             if ($("#Leave_Type").val() == "0") {
                 //alert user to select a leave type first
                 bootbox.alert("Please select a Leave Type", function () {
                     //set leave staEndrt date value to blank
                     $("#LeaveEndDay").val('');
                 });

             } else if ($("#LeaveStartDay").val() == '') {
                 bootbox.alert("Please enter the Leave Start Date");
             } else if ($("#LeaveEndDay").val() == '') {
                 bootbox.alert("Please enter the Leave End Date");
             } else {
                 var start_date = convertDate($("#LeaveStartDay").val(), "/", "-");
                 var end_date = convertDate($("#LeaveEndDay").val(), "/", "-");

                 var startDate = new Date(start_date);
                 var endDate = new Date(end_date);
                 //post to controller function
                 if (startDate <= endDate) {
                     var Leave_Type = $('#Leave_Type').val();
                     var LeaveStartDay = $('#LeaveStartDay').val();
                     var LeaveEndDay = $('#LeaveEndDay').val();
                     console.log(LeaveEndDay, LeaveStartDay, Leave_Type);
                     jQuery.ajax({
                         url:"@Url.Action("GetLeaveState", "LeaveApplication")",
                         type: "POST",
                         data: '{param1:"' + Leave_Type + '",param2:"' + LeaveStartDay + '", param3:"' + LeaveEndDay + '"}',
                         dataType: "json",
                         contentType: "application/json; charset=utf-8",
                         success: function (response) {
                             if (response != null ) {

                                 data = $.parseJSON(response);
                                 if (data.Validity == false) {
                                     bootbox.alert(data.Message);
                                 } else {
                                     $("#ReturnDate").val(data.ReturnDate);
                                     $("#LeaveDaysApplied").val(data.LeaveDaysApplied);
                                 }
                             }
                         }
                     });

                 } else {
                     bootbox.alert("The Leave Start Date must be earlier than the End Date", function () {
                         $("#ReturnDate").val('');
                         $("#LeaveDaysApplied").val('');
                         $("#LeaveEndDay").val('');
                     });
                 }
             }
         });
         //days applied events
         $("#LeaveDaysApplied").blur(function () {
             if (parseInt($("#LeaveDaysApplied").val()) > parseInt($("#Leave_Balance").val())) {
                 bootbox.alert('Applied days cannot zero or more than leave balance days.');
                 $("#LeaveDaysApplied").val('');
             }
         });
         $("#LeaveDaysApplied").keyup(function () {
             if ($("#LeaveDaysApplied").val().length == 0) {
                 return;
             }
             else
                 if ($("#Leave_Type").val() == "0") {
                     bootbox.alert("Please select a Leave Type");
                 }
                 else
                     if ($("#LeaveStartDay").val() == '') {
                         bootbox.alert("Please enter the Leave Start Date");
                     } else {
                         var ltype = $('#Leave_Type').val();
                         var lstart = $('#LeaveStartDay').val();
                         var lappied = $('#LeaveDaysApplied').val();

                         jQuery.ajax({
                             url:"@Url.Action("GetLeaveEndDateAndReturnDate", "LeaveApplication")",
                             type: "POST",
                             data: '{param1:"' + ltype + '",param2:"' + lstart + '", param3:"' + lappied + '"}',
                             dataType: "json",
                             contentType: "application/json; charset=utf-8",
                             success: function (response) {

                                 if (response != null ) {

                                     // alert(typeof (data)); //it comes out to be string
                                     //we need to parse it to JSON
                                     data = $.parseJSON(response);
                                     console.log(data);
                                     if (data.Validity == false) {
                                         bootbox.alert(data.Message);
                                         console.log(data.Message);
                                     } else {
                                         $("#ReturnDate").val(data.ReturnDate);
                                         $("#LeaveEndDay").val(data.LeaveEndDay);
                                     }
                                 }
                             }
                         });
                     }

         });
         //save button to controller save function
         jQuery_3_3_1("#Save").click(function (event) {
             event.preventDefault();

             // Fetch form to apply custom Bootstrap validation
             var form = $("#LeaveApplicationForm")
             console.log(form);
             if (form[0].checkValidity() === false) {
                 event.preventDefault()
                 event.stopPropagation()
                 form.addClass('was-validated');
             } else if (form[0].checkValidity() === true) {
                 // Perform ajax submit here...
                 showToast('Saving application');
                 //function for checkig fileupload

                 $.ajax({
                     url:"@Url.Action("FileUploadHandler", "LeaveApplication")",
                     type: 'POST',
                     data: new FormData($('#LeaveApplicationForm')[0]) ,
                     cache: false,
                     contentType: false,
                     processData: false,
                     success: function (file) {

                         var rdate = $('#ReturnDate').val();
                         var ltypes = $('#Leave_Type').val();
                         var leavec = $('#Leave_comments').val();
                         var lstart = $('#LeaveStartDay').val();
                         var lend = $('#LeaveEndDay').val();
                         var lapllieddy = $('#LeaveDaysApplied').val();
                         jQuery.ajax({
                             url:"@Url.Action("Save", "LeaveApplication")",
                             type: "POST",
                             data: '{param1:"' + rdate + '", param2:"' + ltypes + '", param3:"' + leavec + '", param4:"' + lstart + '", param5:"' + lend + '", param6:"' + lapllieddy + '" , param7:"' + file.name + '"}',
                             dataType: "json",
                             contentType: "application/json; charset=utf-8",
                             success: function (response) {
                                 console.log(data);
                                 if (response != null ) {

                                     //we need to parse it to JSON
                                     data = $.parseJSON(response);

                                     hideLoading();

                                     bootbox.alert(data.Message);
                                     //reset fields
                                     $("#LeaveApplicationForm")[0].reset();
                                     $("#Leave_Type").select2("val", "");
                                 }
                             }
                         });
                     },
                     xhr: function () {
                         var fileXhr = $.ajaxSettings.xhr();
                         if (fileXhr.upload) {
                             $("progress").show();
                             fileXhr.upload.addEventListener("progress", function (e) {
                                 if (e.lengthComputable) {
                                     $("#fileProgress").attr({
                                         value: e.loaded,
                                         max: e.total
                                     });
                                 }
                             }, false);
                         }
                         return fileXhr;
                     }
                 });
             }
             //uncomment below
             event.preventDefault();
         });
         //submit to controller submit function
         jQuery_3_3_1("#Submit").click(function (e) {
             // Fetch form to apply custom Bootstrap validation
             var form = $("#LeaveApplicationForm")

             if (form[0].checkValidity() === false) {
                 event.preventDefault()
                 event.stopPropagation()
                 form.addClass('was-validated');
             } else if (form[0].checkValidity() === true) {

                 var formdata = new FormData($('#LeaveApplicationForm')[0]);
                 // Perform ajax submit here...
                 showToast('Submitting application');
                 $.ajax({
                     url:"@Url.Action("FileUploadHandler", "LeaveApplication")",
                     type: 'POST',
                     data: formdata,
                     cache: false,
                     contentType: false,
                     processData: false,
                     success: function (file) {
                         var rdate = $('#ReturnDate').val();
                         var ltypes = $('#Leave_Type').val();
                         var leavec = $('#Leave_comments').val();
                         var lstart = $('#LeaveStartDay').val();
                         var lend = $('#LeaveEndDay').val();
                         var lapllieddy = $('#LeaveDaysApplied').val();

                         jQuery.ajax({
                             url:"@Url.Action("Submit", "LeaveApplication")",
                             type: "POST",
                             data: '{param1:"' + rdate + '", param2:"' + ltypes + '", param3:"' + leavec + '", param4:"' + lstart + '", param5:"' + lend + '", param6:"' + lapllieddy + '" , param7:"' + file.name + '"}',
                             dataType: "json",
                             contentType: "application/json; charset=utf-8",
                             success: function (response) {

                                 if (response != null ) {

                                     //we need to parse it to JSON
                                     data = $.parseJSON(response);

                                     hideLoading();

                                     bootbox.alert(data.Message);
                                     //reset fields
                                     $("#LeaveApplicationForm")[0].reset();
                                     $("#Leave_Type").select2("val", "");
                                 }
                             }
                         });
                     },
                     xhr: function () {
                         var fileXhr = $.ajaxSettings.xhr();
                         if (fileXhr.upload) {
                             $("progress").show();
                             fileXhr.upload.addEventListener("progress", function (e) {
                                 if (e.lengthComputable) {
                                     $("#fileProgress").attr({
                                         value: e.loaded,
                                         max: e.total
                                     });
                                 }
                             }, false);
                         }
                         return fileXhr;
                     }
                 });
             }
             event.preventDefault();
         });
     });

     //dateConverter
     function convertDate(date, symbol, new_symbol) {

         if (date != '') {
             var raw_date = date;
             if (raw_date.indexOf(symbol) > 0) {
                 day = raw_date.substr(0, 2);
                 month = raw_date.substr(3, 2);
                 year = raw_date.substr(6, 4);

                 return (year + new_symbol + month + new_symbol + day).toString();

             } else {
                 return date;
             }
         } else {
             return date;
         }
     }
     function showToast(modaltittle) {
         var title = modaltittle;
         var icon = 'loading';
         var duration = 50000 * 1;
         $.Toast.showToast({ title: title, duration: duration, icon: icon, image: '' });
     }
     function hideLoading() {
         $.Toast.hideToast();
     }

    </script>


